<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="40" failed="0" ignored="0" total="40" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="MiniRegression" duration-ms="129" started-at="2017-03-17T06:23:08Z" finished-at="2017-03-17T06:23:08Z">
    <groups>
    </groups>
    <test name="1" duration-ms="19" started-at="2017-03-17T06:23:08Z" finished-at="2017-03-17T06:23:08Z">
      <class name="com.sevenstar.testcases.场景用例">
        <test-method status="FAIL" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[${browserName}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[多次下注中奖场景]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.openqa.selenium.interactions.Actions.<init>(Actions.java:44)
	at com.mte.base.MteSenseCore.<init>(MteSenseCore.java:85)
	at com.mte.base.MteSenseBaseCase.beforeClass(MteSenseBaseCase.java:64)
	at com.sevenstar.testcases.场景用例.setUp(场景用例.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="SKIP" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="startTest" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="SKIP" signature="设置定盘数据测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="设置定盘数据测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.openqa.selenium.interactions.Actions.<init>(Actions.java:44)
	at com.mte.base.MteSenseCore.<init>(MteSenseCore.java:85)
	at com.mte.base.MteSenseBaseCase.beforeClass(MteSenseBaseCase.java:64)
	at com.sevenstar.testcases.场景用例.setUp(场景用例.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 设置定盘数据测试 -->
        <test-method status="SKIP" signature="越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="越级操作测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.分批赔率测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 越级操作测试 -->
        <test-method status="SKIP" signature="分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="分批赔率测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.关盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 分批赔率测试 -->
        <test-method status="SKIP" signature="关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="关盘测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.设置定盘数据测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 关盘测试 -->
        <test-method status="SKIP" signature="快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="快打下注测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.开盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 快打下注测试 -->
        <test-method status="SKIP" signature="拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="拦货金额测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.越级操作测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 拦货金额测试 -->
        <test-method status="SKIP" signature="关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="关盘结账" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.结账前报表验证" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 关盘结账 -->
        <test-method status="SKIP" signature="结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="结账前报表验证" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.开盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 结账前报表验证 -->
        <test-method status="SKIP" signature="开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="开盘测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.拦货金额测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 开盘测试 -->
        <test-method status="SKIP" signature="结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="结账后报表验证" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.关盘结账" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 结账后报表验证 -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.sevenstar.testcases.场景用例@16267862]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sevenstar.testcases.场景用例 -->
    </test> <!-- 1 -->
    <test name="2" duration-ms="4" started-at="2017-03-17T06:23:08Z" finished-at="2017-03-17T06:23:08Z">
      <class name="com.sevenstar.testcases.场景用例">
        <test-method status="FAIL" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[${browserName}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[多次下注未中奖场景]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.openqa.selenium.interactions.Actions.<init>(Actions.java:44)
	at com.mte.base.MteSenseCore.<init>(MteSenseCore.java:85)
	at com.mte.base.MteSenseBaseCase.beforeClass(MteSenseBaseCase.java:64)
	at com.sevenstar.testcases.场景用例.setUp(场景用例.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="分批赔率测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.关盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 分批赔率测试 -->
        <test-method status="SKIP" signature="设置定盘数据测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="设置定盘数据测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.openqa.selenium.interactions.Actions.<init>(Actions.java:44)
	at com.mte.base.MteSenseCore.<init>(MteSenseCore.java:85)
	at com.mte.base.MteSenseBaseCase.beforeClass(MteSenseBaseCase.java:64)
	at com.sevenstar.testcases.场景用例.setUp(场景用例.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 设置定盘数据测试 -->
        <test-method status="SKIP" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="startTest" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="SKIP" signature="关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="关盘测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.设置定盘数据测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 关盘测试 -->
        <test-method status="SKIP" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="SKIP" signature="开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="开盘测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.拦货金额测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 开盘测试 -->
        <test-method status="SKIP" signature="快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="快打下注测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.开盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 快打下注测试 -->
        <test-method status="SKIP" signature="拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="拦货金额测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.越级操作测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 拦货金额测试 -->
        <test-method status="SKIP" signature="越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="越级操作测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.分批赔率测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 越级操作测试 -->
        <test-method status="SKIP" signature="关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="关盘结账" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.结账前报表验证" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 关盘结账 -->
        <test-method status="SKIP" signature="结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="结账前报表验证" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.开盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 结账前报表验证 -->
        <test-method status="SKIP" signature="结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="结账后报表验证" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.关盘结账" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 结账后报表验证 -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.sevenstar.testcases.场景用例@221af3c0]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sevenstar.testcases.场景用例 -->
    </test> <!-- 2 -->
    <test name="3" duration-ms="5" started-at="2017-03-17T06:23:08Z" finished-at="2017-03-17T06:23:08Z">
      <class name="com.sevenstar.testcases.场景用例">
        <test-method status="FAIL" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[${browserName}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[单次下注中奖场景]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.openqa.selenium.interactions.Actions.<init>(Actions.java:44)
	at com.mte.base.MteSenseCore.<init>(MteSenseCore.java:85)
	at com.mte.base.MteSenseBaseCase.beforeClass(MteSenseBaseCase.java:64)
	at com.sevenstar.testcases.场景用例.setUp(场景用例.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="startTest" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="SKIP" signature="设置定盘数据测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="设置定盘数据测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.openqa.selenium.interactions.Actions.<init>(Actions.java:44)
	at com.mte.base.MteSenseCore.<init>(MteSenseCore.java:85)
	at com.mte.base.MteSenseBaseCase.beforeClass(MteSenseBaseCase.java:64)
	at com.sevenstar.testcases.场景用例.setUp(场景用例.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 设置定盘数据测试 -->
        <test-method status="SKIP" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="SKIP" signature="分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="分批赔率测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.关盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 分批赔率测试 -->
        <test-method status="SKIP" signature="拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="拦货金额测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.越级操作测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 拦货金额测试 -->
        <test-method status="SKIP" signature="开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="开盘测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.拦货金额测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 开盘测试 -->
        <test-method status="SKIP" signature="越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="越级操作测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.分批赔率测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 越级操作测试 -->
        <test-method status="SKIP" signature="关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="关盘测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.设置定盘数据测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 关盘测试 -->
        <test-method status="SKIP" signature="结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="结账前报表验证" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.开盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 结账前报表验证 -->
        <test-method status="SKIP" signature="关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="关盘结账" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.结账前报表验证" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 关盘结账 -->
        <test-method status="SKIP" signature="结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="结账后报表验证" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.关盘结账" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 结账后报表验证 -->
        <test-method status="SKIP" signature="快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="快打下注测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.开盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 快打下注测试 -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.sevenstar.testcases.场景用例@ba8d91c]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sevenstar.testcases.场景用例 -->
    </test> <!-- 3 -->
    <test name="4" duration-ms="4" started-at="2017-03-17T06:23:08Z" finished-at="2017-03-17T06:23:08Z">
      <class name="com.sevenstar.testcases.场景用例">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="beforesuite" is-config="true" duration-ms="377" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="FAIL" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[${browserName}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[单次下注未中奖场景]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.openqa.selenium.interactions.Actions.<init>(Actions.java:44)
	at com.mte.base.MteSenseCore.<init>(MteSenseCore.java:85)
	at com.mte.base.MteSenseBaseCase.beforeClass(MteSenseBaseCase.java:64)
	at com.sevenstar.testcases.场景用例.setUp(场景用例.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="startTest" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="SKIP" signature="关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="关盘测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.设置定盘数据测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.关盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 关盘测试 -->
        <test-method status="SKIP" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="SKIP" signature="设置定盘数据测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="设置定盘数据测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.openqa.selenium.interactions.Actions.<init>(Actions.java:44)
	at com.mte.base.MteSenseCore.<init>(MteSenseCore.java:85)
	at com.mte.base.MteSenseBaseCase.beforeClass(MteSenseBaseCase.java:64)
	at com.sevenstar.testcases.场景用例.setUp(场景用例.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.beforeRun(TestRunner.java:634)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 设置定盘数据测试 -->
        <test-method status="SKIP" signature="分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="分批赔率测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.关盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.分批赔率测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 分批赔率测试 -->
        <test-method status="SKIP" signature="结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="结账前报表验证" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.开盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.结账前报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 结账前报表验证 -->
        <test-method status="SKIP" signature="拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="拦货金额测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.越级操作测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.拦货金额测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 拦货金额测试 -->
        <test-method status="SKIP" signature="开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="开盘测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.拦货金额测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.开盘测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 开盘测试 -->
        <test-method status="SKIP" signature="越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="越级操作测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.分批赔率测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.越级操作测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 越级操作测试 -->
        <test-method status="SKIP" signature="快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="快打下注测试" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.开盘测试" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.快打下注测试()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 快打下注测试 -->
        <test-method status="SKIP" signature="关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="关盘结账" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.结账前报表验证" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.关盘结账()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 关盘结账 -->
        <test-method status="SKIP" signature="结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="结账后报表验证" duration-ms="0" started-at="2017-03-17T14:23:08Z" depends-on-methods="com.sevenstar.testcases.场景用例.关盘结账" finished-at="2017-03-17T14:23:08Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method 场景用例.结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method 场景用例.结账后报表验证()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- 结账后报表验证 -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:com.sevenstar.testcases.场景用例@61d47554]" name="afterSuite" is-config="true" duration-ms="0" started-at="2017-03-17T14:23:08Z" finished-at="2017-03-17T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.sevenstar.testcases.场景用例 -->
    </test> <!-- 4 -->
  </suite> <!-- MiniRegression -->
</testng-results>
